% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distrib.R
\docType{class}
\name{distrib}
\alias{distrib}
\title{\code{distrib} objects}
\description{
Objects of class \strong{\code{distrib}} store all analytic ingredients of a
probability distribution (mean, variance, density, random generator,
links, &c.) in a single list.
}
\section{Components}{

\describe{
\item{\code{distrib}}{\code{character(1)}. Name of the distribution.}
\item{\code{link_list}}{\code{list} of \code{length(parameters)} element containing \code{link-gdrm} objects created with \code{\link[=make_link]{make_link()}}.}
\item{\code{parameters}}{\code{character} of \code{length(parameters)} containing the names of model parameters.}
\item{\code{parameters_description}}{\code{character} of \code{length(parameters)} containing the description of model parameters.}
\item{\code{parameters_bounds}}{\code{list} of \code{length(parameters)} element. Each element contains a \code{numeric(2)} vector specifying lower
and upper bounds for the relative parameter.}
\item{\code{E}, \code{V}, \code{A}, \code{K}, \code{Me}, \code{Mo}}{Functions returning mean, variance, skewness,
kurtosis, median and mode. Those functions take as argument a list of \code{length(parameters)} element \code{par}, in which each
element is a numeric \code{n}-dimensional vector containing the values of the relative parameter.}
\item{\code{pdf}}{\code{function} for computing the probability density function, which takes three arguments:
\itemize{
\item \code{x}: a numeric vector of \code{n} elements containing the values at which the pdf is to be computed;
\item \code{par}: a list of \code{length(parameters)} element, one for each parameter of the model; those could be either single element vectors of numeric vectors of \code{n} elements;
\item \code{log}: logical (default = \code{FALSE}) specifying if the log of the pdf is to be returned.
}}
\item{\code{loglik}, \code{lli}}{Functions to compute the loglikelihood of the model and the individual contributions to loglikelihood.
Those functions take two arguments:
\itemize{
\item \code{x}: a numeric vector of \code{n} elements containing the values at which the likelihood is to be computed;
\item \code{par}: a list of \code{length(parameters)} element, one for each parameter of the model; those could be either single element vectors of numeric vectors of \code{n} elements.
}}
\item{\code{grad}}{Functions to compute the gradient of the loglikelihood with respect to the model parameters, with three arguments:
\itemize{
\item \code{x}: a numeric vector of \code{n} elements containing the values at which the gradient is to be computed;
\item \code{par}: a list of \code{length(parameters)} element, one for each parameter of the model; those must be single element vectors;
\item \code{sum}: logical indicating whether the sum over all observation should be returned (default, \code{TRUE}) or if the individual contributes to the gradient should be returned (\code{FALSE}).
}}
\item{\code{hess}}{Functions to compute the hessian of the loglikelihood with respect to the model parameters, with three arguments:
\itemize{
\item \code{x}: a numeric vector of \code{n} elements containing the values at which the hessian is to be computed;
\item \code{par}: a list of \code{length(parameters)} element, one for each parameter of the model; those must be single element vectors;
\item \code{sum}: logical indicating whether the sum over all observation should be returned (default, \code{TRUE}) or if the individual contributes to the hessian should be returned (\code{FALSE}).
}}
\item{\code{cdf}}{\code{function} for computing the cumulative distribution function, which takes four arguments:
\itemize{
\item \code{x}: a numeric vector of \code{n} elements containing the values at which the cdf is to be computed;
\item \code{par}: a list of \code{length(parameters)} element, one for each parameter of the model; those could be either single element vectors of numeric vectors of \code{n} elements;
\item \code{lower.tail}: logical; if \code{TRUE} (default) probabilities are \eqn{P(X \leq x)}, otherwise \eqn{P(X > x)};
\item \code{log.p}: logical (default = \code{FALSE}) specifying if the log of the cdf is to be returned.
}}
\item{\code{qf}}{\code{function} for computing the quantile function, which takes four arguments:
\itemize{
\item \code{p}: a numeric vector of \code{n} elements containing the probability values for which the quantiles are to be computed;
\item \code{par}: a list of \code{length(parameters)} element, one for each parameter of the model; those could be either single element vectors of numeric vectors of \code{n} elements;
\item \code{lower.tail}: logical; if \code{TRUE} (default) probabilities are \eqn{P(X \leq x)}, otherwise \eqn{P(X > x)};
\item \code{log.p}: logical (default = \code{FALSE}) specifying if probabilities \code{p} are given as \code{log(p)}.
}}
\item{\code{rng}}{\code{function} for random number generations which take two arguments:
\itemize{
\item \code{n}: a numeric vector specifying how many random numbers are to be generated;
\item \code{par}: a list of \code{length(parameters)} element, one for each parameter of the model; those could be either single element vectors of numeric vectors of \code{n} elements.
}}
\item{\code{mgf}, \code{cml}, \code{cf}}{Functions to compute the moment generating function, the cumulant generating function and the characteristic function.
Those functions take two arguments:
\itemize{
\item \code{x}: a numeric vector of \code{n} elements containing the values at which the functions are to be computed;
\item \code{par}: a list of \code{length(parameters)} element, one for each parameter of the model; those could be either single element vectors of numeric vectors of \code{n} elements.
}}
#' \item{\code{starting_values}}{List containing starting values for model parameters.}
\item{\code{distrib_args}}{List containing distribution specific arguments.}
}
}

